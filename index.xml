<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CloudLumberjack on</title><link>https://cloudlumberjack.com/</link><description>Recent content in CloudLumberjack on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 17 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://cloudlumberjack.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Quick git rebase</title><link>https://cloudlumberjack.com/posts/quick-git-rebase/</link><pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate><guid>https://cloudlumberjack.com/posts/quick-git-rebase/</guid><description>Using git from the command line has always been a bit intimidating, with git rebase being the most challenging for me. I&amp;rsquo;ve typically put off learning how to do it properly and just relied on git merge to bring feature branches up to date with main and resolve merge conflicts. I finally had some time to sit down and learn it, and of course it&amp;rsquo;s really not that bad! I created this quick demo to show how simple it can be.</description></item><item><title>Revert Azure Virtual Machine with Snapshots</title><link>https://cloudlumberjack.com/posts/azure-vm-snapshots/</link><pubDate>Mon, 26 Apr 2021 00:00:00 +0000</pubDate><guid>https://cloudlumberjack.com/posts/azure-vm-snapshots/</guid><description>I recently prepared a Lightning Demo for the 2021 PowerShell + DevOps Global Summit, which thankfully was a pre-recorded session and not live. This gave me the chance to practice, and rehearse, and fine tune my content. I used a virtual machine in Azure to perform the demo which gave me two great benefits.
One: I was preparing the demo from a base Windows 10 machine (or pretty close to it), so I was pretty confident that my material would work for anyone else.</description></item><item><title>Serverless tagging with Event Grid and Azure Functions</title><link>https://cloudlumberjack.com/posts/azureautotagger/</link><pubDate>Mon, 01 Mar 2021 00:00:00 +0000</pubDate><guid>https://cloudlumberjack.com/posts/azureautotagger/</guid><description>Azure AutoTagger is a lightweight, low-cost serverless solution that can easily be deployed to an Azure subscription. Once deployed Azure AutoTagger monitors for ResourceWriteSucess events within the subscription and triggers an Azure Function to automatically apply a LastModifiedTimestamp and LastModifiedBy tag. Any organization should develop and implement it&amp;rsquo;s own tagging strategy (Azure&amp;rsquo;s Cloud Adoption Framework is a great start). This solution can be a complimentary piece to a more comprehensive tagging strategy, and can be useful when deployed to test/development/sandbox subscriptions where resources sometimes have a habit of sticking around longer than they were intended.</description></item><item><title>GitHub Actions now with Manual Approvals</title><link>https://cloudlumberjack.com/posts/github-actions-approvals/</link><pubDate>Wed, 06 Jan 2021 00:00:00 +0000</pubDate><guid>https://cloudlumberjack.com/posts/github-actions-approvals/</guid><description>I&amp;rsquo;ve loved GitHub Actions since they were released, but the one piece I always felt was missing was some kind of gating or more control around deployments. Now we can add manual approval requirements to our workflows through GitHub&amp;rsquo;s new Environments configurations. Environments also support environment specific secrets in additional to repository-wide secrets.
Create Environments To demo environments and approvals I&amp;rsquo;ve created a simple .net web app, along with two Azure Web Apps (dev and prod).</description></item><item><title>PowerUp your PowerShell prompt</title><link>https://cloudlumberjack.com/posts/powerup-your-powershell-prompt/</link><pubDate>Sat, 19 Dec 2020 00:00:00 +0000</pubDate><guid>https://cloudlumberjack.com/posts/powerup-your-powershell-prompt/</guid><description>One of the great things about PowerShell is that is so extensible and customizable. When sharing my screen with co-workers and customers a frequent exchange happens:
&amp;ldquo;Oh, what shell are you using?&amp;rdquo;
&amp;ldquo;PowerShell.&amp;rdquo;
&amp;ldquo;How do you make it look like that? Mine is just blue.&amp;rdquo;
So let&amp;rsquo;s go through the different items I&amp;rsquo;m using to build this PowerShell experience.
PowerShell 7.1 Windows Terminal NerdFonts PowerShell Modules poshgit PSReadLine beta Az.Tools.Predictor oh-my-posh TerminalIcons Install a better shell I&amp;rsquo;m a big fan of utilizing Chocolatey to install and update Windows applications.</description></item><item><title>Azure DevOps PowerShell code analysis with Pull Request comments</title><link>https://cloudlumberjack.com/posts/ado-pr-psscriptanalyzer/</link><pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate><guid>https://cloudlumberjack.com/posts/ado-pr-psscriptanalyzer/</guid><description>If you are using PowerShell you should be storing your code in a code repository. GitHub and Azure DevOps are great choices, but really any git repo will do. This isn&amp;rsquo;t an article about why you should be using version control, I feel that&amp;rsquo;s been covered at great length in the community already.
This article is going to walk through leveraging Azure DevOps to perform static code analysis using PSScriptAnalyzer as part of a Pull Request workflow.</description></item><item><title>Setup GitHub verified commits for VSCode</title><link>https://cloudlumberjack.com/posts/setup-github-verified-commits-for-vscode/</link><pubDate>Sun, 25 Oct 2020 00:00:00 +0000</pubDate><guid>https://cloudlumberjack.com/posts/setup-github-verified-commits-for-vscode/</guid><description>Want to see that sweet :heavy_check_mark: Verified status on your GitHub commit history? This guide walks through how to setup and configure everything needed on a Windows system!
Install GnuPG (GPG) I&amp;rsquo;m a big fan of leveraging Chocolatey for package management on Windows. It makes things really easy to find and install software, and keep things up to date.
If you dont have Chocolatey already installed, head over to https://chocolatey.org/install and follow the instructions.</description></item><item><title>Start with why</title><link>https://cloudlumberjack.com/posts/start-with-why/</link><pubDate>Sat, 24 Oct 2020 00:00:00 +0000</pubDate><guid>https://cloudlumberjack.com/posts/start-with-why/</guid><description>Nearly a year ago I read Don Jones&amp;rsquo; book &amp;ldquo;Be the Master&amp;rdquo;. It&amp;rsquo;s not available any longer as he&amp;rsquo;s combining two of his books into a larger narrative. There was an excerpt in the book that really struck me as such a poignant explanation of teaching and helping others in our technical community.
We can all point to a guru who helped us through a difficult time or gave us insight that – even years after the fact – proved to be a turning point in our careers and lives.</description></item><item><title>About</title><link>https://cloudlumberjack.com/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloudlumberjack.com/about/</guid><description>I am a seasoned IT professional with nearly 20 years of experience. I have a deep background and extensive experience with Microsoft technologies. I am currently a DevOps Architect at Softchoice where I help customers utilize Azure, GitHub, CI/CD Pipelines, Infrastructure as Code, and automation.
I live in Pennsylvania, am a husband to an awesome wife, father to two young children, an avid baseball fan/player/manager/coach, and enjoy hunting and fishing.</description></item></channel></rss>